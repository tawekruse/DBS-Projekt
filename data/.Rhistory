mutate(weight_bin = factor(weight_bin, levels = c("normal", "critical")),
easyFit = factor(easyFit, levels = c("placebo", "dose25", "dose50")))
getwd
getwd()
## ------------------------------------------------------------
## by J.Kruppa on Monday, April 19, 2021 (09:34)
pacman::p_load(tidyverse, magrittr, mvtnorm, plyr, simstudy,
broom, mosaic)
## Read SPSS wirth read_sav
easyFit_tbl <- read_csv("easyFit.csv") %>%
mutate(weight_bin = factor(weight_bin, levels = c("normal", "critical")),
easyFit = factor(easyFit, levels = c("placebo", "dose25", "dose50")))
## glm() - confounder
glm(weight_bin ~ easyFit + creatinin + age + easyFit:age,
data = filter(easyFit_tbl, gender != "man"),
family = binomial) %>%
tidy(exponentiate = TRUE) %>%
as.data.frame
fit1 <- glm(weight_bin ~ easyFit + creatinin + age,
data = easyFit_tbl,
family = binomial)
plot_model(fit1, type = "int", terms = c("easyFit", "creatinin", "age"))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, table1, survival, tidyverse, mosaic, sjPlot, sjmisc)
plot_model(fit1, type = "int", terms = c("easyFit", "creatinin", "age"))
test <- lm(Mass ~ Diet + Water + Length, data = birds_tibble)
confint(test)
lm(Mass ~ Diet + Water + Length, data = birds_tibble, family="binomial") %>%
summary()
confint(test)
lm(Mass ~ Diet + Water + Length, data = birds_tibble) %>%
summary()
glm(Water ~ Length + Diet + Status,
data = birds_tibble,
family = binomial) %>%
tidy(exponentiate = TRUE)
library(boot)
melanoma2 <- melanoma
# Factor the basic variables that
# we're interested in
melanoma2$status <-
factor(melanoma2$status,
levels=c(2,1,3),
labels=c("Alive", # Reference
"Melanoma death",
"Non-melanoma death"))
table1(~ factor(sex) + age + factor(ulcer) + thickness | status, data=melanoma2)
table1(~ factor(sex) + age + factor(ulcer) + thickness | data=melanoma2)
melanoma2
birds_tibble <- birds_tbl %>%
mutate(Diet = factor(Diet,
labels = c("omnivor", "herbivor", "carnivor")),
Status = as_factor(Status),
Migr = as_factor(Migr),
Wood = as_factor(Wood),
Upland = as_factor(Upland),
Water = as_factor(Water))
birds_tibble
birds_tibble <- birds_tbl %>%
mutate(Diet = factor(Diet,
labels = c("omnivor", "herbivor", "carnivor")),
Status = as_factor(Status),
Migr = as_factor(Migr),
Wood = as_factor(Wood),
Upland = as_factor(Upland),
Water = as_factor(Water))
table1(~ factor(sex) + age + factor(ulcer) + thickness | status, data=melanoma2)
birds_tibble <- birds_tbl %>%
mutate(Diet = factor(Diet,
labels = c("omnivor", "herbivor", "carnivor")),
Status = as_factor(Status),
Migr = as_factor(Migr),
Wood = as_factor(Wood),
Upland = as_factor(Upland),
Water = as_factor(Water))
table1(~ Status + Water + Mass + Length | Diet, data=birds_tibble)
birds_tibble <- birds_tbl %>%
mutate(Diet = factor(Diet,
labels = c("omnivor", "herbivor", "carnivor")),
Status = as_factor(Status),
Migr = as_factor(Migr),
Wood = as_factor(Wood),
Upland = as_factor(Upland),
Water = as_factor(Water))
table1(~ Migr + Water + Mass + Length | Diet, data=birds_tibble)
table1(~ Migr + Water + Mass + Length | Diet*Status, data=birds_tibble)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, table1, survival, tidyverse, mosaic, sjPlot, sjmisc, broom)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, table1, survival, tidyverse, mosaic, sjPlot, sjmisc, broom)
table_one
birds_tbl
library(magrittr)
install.packages("ggpubr")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, survival, tidyverse, mosaic, broom, MASS, magrittr, ggpubr)
easyFit_tbl <- read_csv("easyFit_mod.csv")
#dput(sort(names(easyFit_tbl)))
#City entfernt
myVars <- c("age", "bloodpressure", "calories", "creatinin", "easyFit",
"gender", "height", "pet", "sport", "stopped_due_incident", "time_taken",
"weight", "weight_bin", "weight_cat")
catVars <- c("easyFit", "gender", "pet",
"stopped_due_incident", "weight_bin", "weight_cat")
table_one <- CreateTableOne(vars = myVars, data = easyFit_tbl, factorVars = catVars)
summary(table_one)
easyFit_fac_tbl <- easyFit_tbl %>%
mutate(easyFit = factor(easyFit, levels = c("placebo", "dose25", "dose50")),
weight_cat = ordered(weight_cat, levels = c("low", "mid", "high")),
weight_bin = factor(weight_bin, levels = c("normal", "critical")),
gender = factor(gender, levels = c("man", "woman")),
stopped_due_incident = factor(stopped_due_incident,labels = c("continued", "stopped")),
pet = factor(pet, levels = c("no", "yes")))
mds_tbl <- easyFit_fac_tbl %>%
dist() %>%
cmdscale() %>%
as_tibble() %>%
set_names(c("dim_1", "dim_2"))
ggscatter(mds_tbl, dim_1, dim_2,
label)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, survival, tidyverse, mosaic, broom, MASS, magrittr, ggpubr, dplyr)
mds_tbl <- easyFit_fac_tbl %>%
dist() %>%
cmdscale() %>%
as_tibble() %>%
set_names(c("dim_1", "dim_2"))
ggscatter(mds_tbl, dim_1, dim_2,
label)
mds_tbl <- easyFit_fac_tbl %>%
dist() %>%
cmdscale() %>%
as_tibble() %>%
set_names(c("dim_1", "dim_2"))
ggscatter(mds_tbl, x=dim_1, y = dim_2,
#label = rownames(swiss),
size = 1,
repel = TRUE)
mds_tbl <- easyFit_fac_tbl %>%
dist() %>%
cmdscale() %>%
as_tibble() %>%
set_names(c("dim_1", "dim_2"))
mds_tbl <- easyFit_fac_tbl %>%
dist() %>%
cmdscale() %>%
as_tibble() %>%
set_names(c("dim_1", "dim_2"))
ggscatter(mds_tbl, x=dim_1, y = dim_2,
size = 1,
repel = TRUE)
mds_tbl <- easyFit_fac_tbl %>%
dist() %>%
cmdscale() %>%
as_tibble() %>%
set_names(c("dim_1", "dim_2"))
ggscatter(mds_tbl, x=dim_1, y = dim_2,
size = 1,
repel = TRUE)
mds_tbl <- easyFit_fac_tbl %>%
dist() %>%
cmdscale() %>%
as_tibble() %>%
set_names(c("dim_1", "dim_2"))
ggplot(easyFit_fac_tbl, aes(weight, bloodpressure)) +
geom_boxplot()
remove.packages("dplyr")
remove.packages("dbplyr")
remove.packages("dtplyr")
install.packages("dplyr")
fuck <- easyFit_fac_tbl %>%
select(-city)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, survival, tidyverse, mosaic, broom, MASS, magrittr, ggpubr, dplyr)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, survival, tidyverse, mosaic, broom, MASS, magrittr, ggpubr, dplyr)
easyFit_tbl <- read_csv("easyFit.csv")
easyFit_fac_tbl <- easyFit_tbl %>%
mutate(easyFit = factor(easyFit, levels = c("placebo", "dose25", "dose50")),
weight_cat = ordered(weight_cat, levels = c("low", "mid", "high")),
weight_bin = factor(weight_bin, levels = c("normal", "critical")),
gender = factor(gender, levels = c("man", "woman")),
stopped_due_incident = factor(stopped_due_incident,labels = c("continued",
"stopped")),
pet = factor(pet, levels = c("no", "yes")))
fuck <- easyFit_fac_tbl %>%
select(-city)
fuck <- easyFit_fac_tbl %>%
select(-city)
install.packages("scales")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, survival, tidyverse, mosaic, broom, MASS, magrittr, ggpubr, dplyr)
easyFit_tbl <- read_csv("easyFit.csv")
easyFit_fac_tbl <- easyFit_tbl %>%
mutate(easyFit = factor(easyFit, levels = c("placebo", "dose25", "dose50")),
weight_cat = ordered(weight_cat, levels = c("low", "mid", "high")),
weight_bin = factor(weight_bin, levels = c("normal", "critical")),
gender = factor(gender, levels = c("man", "woman")),
stopped_due_incident = factor(stopped_due_incident,labels = c("continued",
"stopped")),
pet = factor(pet, levels = c("no", "yes")))
fuck <- easyFit_fac_tbl %>%
select(-city)
library(dbplyr)
library(dtplyr)
fuck <- easyFit_fac_tbl %>%
select(-city)
fuck <- easyFit_fac_tbl %>%
select(-city)
fuck <- easyFit_fac_tbl %>%
select(-city)
fuck <- easyFit_fac_tbl %>%
select(-city)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tableone, survival, tidyverse, mosaic, broom, MASS, magrittr, ggpubr, dplyr)
easyFit_tbl <- read_csv("easyFit.csv")
easyFit_fac_tbl <- easyFit_tbl %>%
mutate(easyFit = factor(easyFit, levels = c("placebo", "dose25", "dose50")),
weight_cat = ordered(weight_cat, levels = c("low", "mid", "high")),
weight_bin = factor(weight_bin, levels = c("normal", "critical")),
gender = factor(gender, levels = c("man", "woman")),
stopped_due_incident = factor(stopped_due_incident,labels = c("continued",
"stopped")),
pet = factor(pet, levels = c("no", "yes")))
fuck <- easyFit_fac_tbl %>%
select(-city)
detach("package:dplyr", unload = TRUE)
remove.packages("dplyr")
install.packages("tidyverse")
library(dplyr)
fuck <- easyFit_fac_tbl %>%
select(-city)
full_lm_fit <- glm(weight ~ ., data = easyFit_fac_tbl, family = gaussian)
#City entfernt
myVars <- c("age", "bloodpressure", "calories", "creatinin", "easyFit",
"gender", "height", "pet", "sport", "stopped_due_incident", "time_taken",
"weight", "weight_bin", "weight_cat")
catVars <- c("easyFit", "gender", "pet",
"stopped_due_incident", "weight_bin", "weight_cat")
table_one <- CreateTableOne(vars = myVars, data = easyFit_tbl, factorVars = catVars, strata = "weight_bin")
summary(table_one)
fuck <- easyFit_fac_tbl %>%
select(-city)
full_lm_fit <- glm(weight ~ ., data = fuck, family = gaussian)
#City entfernt
myVars <- c("age", "bloodpressure", "calories", "creatinin", "easyFit",
"gender", "height", "pet", "sport", "stopped_due_incident", "time_taken",
"weight", "weight_bin", "weight_cat")
catVars <- c("easyFit", "gender", "pet",
"stopped_due_incident", "weight_bin", "weight_cat")
table_one <- CreateTableOne(vars = myVars, data = easyFit_tbl, factorVars = catVars, strata = "weight_bin")
summary(table_one)
full_lm_fit
full_lm_fit <- glm(weight ~ ., data = fuck)
full_lm_fit
fuck <- easyFit_fac_tbl %>%
select(-city)
full_lm_fit <- lm(easyFit_fac_tbl ~ ., data = fuck) %>%
summary()
fuck <- easyFit_fac_tbl %>%
select(-city)
full_lm_fit <- lm(weight ~ ., data = fuck) %>%
summary()
#City entfernt
myVars <- c("age", "bloodpressure", "calories", "creatinin", "easyFit",
"gender", "height", "pet", "sport", "stopped_due_incident", "time_taken",
"weight", "weight_bin", "weight_cat")
catVars <- c("easyFit", "gender", "pet",
"stopped_due_incident", "weight_bin", "weight_cat")
table_one <- CreateTableOne(vars = myVars, data = easyFit_tbl, factorVars = catVars, strata = "weight_bin")
summary(table_one)
full_lm_fit
fuck
easyFit_tbl <- read_csv("easyFit.csv")
easyFit_fac_tbl <- easyFit_tbl %>%
mutate(easyFit = factor(easyFit, levels = c("placebo", "dose25", "dose50")),
weight_cat = factor(weight_cat, levels = c("low", "mid", "high")),
weight_bin = factor(weight_bin, levels = c("normal", "critical")),
gender = factor(gender, levels = c("man", "woman")),
stopped_due_incident = factor(stopped_due_incident,labels = c("continued",
"stopped")),
pet = factor(pet, levels = c("no", "yes")))
fuck <- easyFit_fac_tbl %>%
select(-city)
full_lm_fit <- lm(weight ~ ., data = fuck) %>%
summary()
#City entfernt
myVars <- c("age", "bloodpressure", "calories", "creatinin", "easyFit",
"gender", "height", "pet", "sport", "stopped_due_incident", "time_taken",
"weight", "weight_bin", "weight_cat")
catVars <- c("easyFit", "gender", "pet",
"stopped_due_incident", "weight_bin", "weight_cat")
table_one <- CreateTableOne(vars = myVars, data = easyFit_tbl, factorVars = catVars, strata = "weight_bin")
summary(table_one)
full_lm_fit
install.packages("shiny")
install.packages("shiny")
library(RPostgreSQL)
library(DBI)
library(RPostgreSQL)
# create a connection
# save the password that we can "hide" it as best as we can by collapsing it
pw <- {
"FreieUni19!"
}
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "test",
host = "localhost", port = 5432,
user = "Tawe", password = pw)
rm(pw) # removes the password
# check for the cartable
dbExistsTable(con, "students")
# TRUE
data(mtcars)
df <- data.frame(carname = rownames(mtcars),
mtcars,
row.names = NULL)
df
View(df)
df$carname <- as.character(df$carname)
View(df)
rm(mtcars)
View(df)
# writes df to the PostgreSQL database "postgres", table "cartable"
dbWriteTable(con, "students",
value = df, append = TRUE, row.names = FALSE)
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "test",
host = "localhost", port = 5432,
user = "Tawe", password = pw)
# create a connection
# save the password that we can "hide" it as best as we can by collapsing it
pw <- {
"FreieUni19!"
}
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "test",
host = "localhost", port = 5432,
user = "Tawe", password = pw)
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "test",
host = "localhost", port = 5432,
user = "Tawes-Air", password = pw)
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "test",
host = "localhost", port = 5432,
user = "postgres", password = pw)
summary(iris)
library(tidyverse)
library(janitor)
iris <- as.data.frame(iris) %>%
clean_names()
summary(iris)
# Create a connection to the database
library('RPostgreSQL')
pg = dbDriver("PostgreSQL")
# Local Postgres.app database; no password by default
# Of course, you fill in your own database information here.
con = dbConnect(pg, user="postgres", password="FreieUni19",
host="localhost", port=5432, dbname="test")
install.packages("RPostgres")
library(RPostgres)
# Local Postgres.app database; no password by default
# Of course, you fill in your own database information here.
con <- dbConnect(RPostgres::Postgres(),
host = "localhost",
port = 5432,
dbname = "test",
user = "postgres",
password = "FreieUni19"
)
# write the table into the database.
# use row.names=FALSE to prevent the query
# from adding the column 'row.names' to the table
# in the db
dbWriteTable(con,'iris',iris, row.names=FALSE)
dbWriteTable(con,'iris',iris, row.names=FALSE)
## [1] TRUE
dtab <- dbGetQuery(con, "selcect * from iris")
dtab <- dbGetQuery(con, "select * from iris")
dtab
View(dtab)
dtab <- dbGetQuery(con, "select * from students")
View(dtab)
dbDisconnect(con)
shiny::runGitHub("tawekruse/Worldmap")
library(tidyverse)
library(janitor)
population_grothw_tbl <- read.csv("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien/population_growth_tidy.csv")
population_grothw_tbl
population_grothw_tbl <- read.csv("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien/population_growth_tidy.csv", sep = ";")
View(population_grothw_tbl)
population_grothw_tbl <- read.csv("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien/population_growth.csv")
View(population_grothw_tbl)
country_all <- read.csv("/Users/tawekruse/Desktop/database/Countrycode all.csv")
population_grothw_tbl <- read.csv("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien/population_growth.csv")
country_all <- read.csv("/Users/tawekruse/Desktop/database/Countrycode all.csv")
View(country_all)
country_all <- read.csv("/Users/tawekruse/Desktop/database/Countrycode all.csv") %>%
clean_names()
View(country_all)
country_all %<>% select(name, alpha_3, region, sub_region)
library(magrittr)
country_all %<>% select(name, alpha_3, region, sub_region)
country_all
View(country_all)
country_all %<>% select(name, alpha_3, region, sub_region) %>%
na.omit()
View(country_all)
country_all %<>% select(name, alpha_3, region, sub_region) %>%
filter(-ATA)
country_all %<>% select(name, alpha_3, region, sub_region) %>%
filter(alpha_3 != "ATA")
View(country_all)
names(population_grothw_tbl)[names(population_grothw_tbl)=="Country.Name"] <- "name"
names(population_grothw_tbl)
df <-  population_grothw_tbl %>% left_join(country_all,by="name")
df
View(df)
df <-  country_all %>% left_join(population_grothw_tbl,by="name")
View(df)
View(df)
t <- df %>% na.omit()
View(t)
temp <- population_grothw_tbl %>%
select(name, Country.Code)
df1 <-  country_all %>% left_join(temp,by="name")
View(df1)
df1 %<>% na.omit()
View(df1)
temp1 <- read.csv("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien/test.csv")
View(temp1)
temp1 <- read.csv("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien/test.csv", sep = ";")
View(temp1)
temp1 <- read.csv("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien/test.csv", sep = ";") %>%
filter(Country.Code != "DEL")
View(temp1)
starwasrs_df <- as.data.frame(starwars) %>%
clean_names()
summary(starwasrs_df)
# Create a connection to the database
library('RPostgreSQL')
library(tidyverse)
library(janitor)
library(RPostgres)
# Local Postgres.app database; no password by default
# Of course, you fill in your own database information here.
con <- dbConnect(RPostgres::Postgres(),
host = "localhost",
port = 5432,
dbname = "test",
user = "postgres",
password = "FreieUni19"
)
# write the table into the database.
# use row.names=FALSE to prevent the query
# from adding the column 'row.names' to the table
# in the db
dbWriteTable(con,'starwars',starwasrs_df, row.names=FALSE)
dtab <- dbGetQuery(con, "select * from starwars")
View(dtab)
dtab <- dbGetQuery(con, "select * from iris")
View(dtab)
library(tidyverse)
library(janitor)
setwd("/Users/tawekruse/Desktop/DBS-Projekt/csv-Dateien")
gdp <- read_csv("gdp_tidy.csv")
gdp
gdp <- read_csv("gdp_tidy.csv")
View(gdp)
gdp <- read_csv("gdp_tidy.csv") %>%
clean_names()
View(gdp)
gdp <- read_csv("gdp_tidy.csv")
View(gdp)
gdp <- read_csv("gdp_tidy.csv") %>%
clean_names()
View(gdp)
write.csv(gdp, "test.csv")
gdp <- read_csv("gdp_tidy.csv") %>%
select(-"Indicator Name")
View(gdp)
gdp <- read_csv("gdp_tidy.csv") %>%
select(-"Indicator Name", -"Indicator Code")
View(gdp)
gather(gdp, key = "year", value = "gdp_value", 1960:2020)
gdp <- read_csv("gdp_tidy.csv") %>%
select(-"Indicator Name", -"Indicator Code", -2020, -X66)
View(gdp)
View(gdp)
gdp <- read_csv("gdp_tidy.csv") %>%
select(-"Indicator Name", -"Indicator Code", -"2020", -"X66")
View(gdp)
View(gdp)
gather(gdp, key = "year", value = "gdp_value", "1960":"2019")
View(gdp)
View(gdp)
gdp_finish <- gdp %>%
gather(key = "year", value = "gdp_value", "1960":"2019")
View(gdp_finish)
co2emission <- read_csv("co2_emission_tidy.csv")
co2emission <- read.csv("co2_emission_tidy.csv")
coemission <- read.csv("co2_emission_tidy.csv")
